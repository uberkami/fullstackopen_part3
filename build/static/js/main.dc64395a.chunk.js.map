{"version":3,"sources":["Components/Filter.js","Components/Rows.js","Components/Add.js","Components/Notification.js","services/entries.js","App.js","serviceWorker.js","index.js"],"names":["Filter","props","newSearch","searchChange","value","onChange","Rows","persons","deleteNumber","listToShow","searchList","filter","person","name","toLowerCase","includes","length","map","key","number","onClick","id","rows","Add","newName","newNumber","addPerson","changeName","changeNumber","updateNumber","onSubmit","event","nameIncluded","numberIncluded","preventDefault","alert","type","Notification","message","setMessage","alertStyle","color","fontSize","padding","marginBottom","showStyle","error","background","borderStyle","borderRadius","setTimeout","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchName","setError","useEffect","entriesService","initialPersons","catch","target","personToUpdate","window","confirm","returnedPerson","concat","personToDelete","item","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc64395a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    const newSearch = props.newSearch\n    const searchChange = props.searchChange\n    return (\n      <div>\n        filter shown with:\n    <input\n          value={newSearch}\n          onChange={searchChange}\n        />\n      </div>\n    )\n  }\n\nexport default Filter","import React from 'react'\n\nconst Rows = (props) => {\n    const persons = props.persons\n    const newSearch = props.newSearch\n    const deleteNumber = props.deleteNumber\n    let listToShow = []\n    const rows = () => {\n        if (newSearch === '') {\n            listToShow = persons\n        } else {\n            const searchList = persons.filter((person) => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n            if (searchList.length === 0) {\n                return (\n                    <div >\n                        Person with the name {newSearch} was not found!\n            </div>)\n            } else {\n                listToShow = searchList\n            }\n        }\n        return (\n            listToShow.map(person =>\n                <div key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={() => deleteNumber(person)} key={person.id}>delete</button>\n                </div>\n            ))\n    }\n    return rows()\n}\n\nexport default Rows","import React from 'react'\n\nconst Add = (props) => {\n    const persons = props.persons\n    const newName = props.newName\n    const newNumber = props.newNumber\n    const addPerson = props.addPerson\n    const changeName = props.changeName\n    const changeNumber = props.changeNumber\n    const updateNumber = props.updateNumber\n\n    const addName = (event) => {\n        const nameIncluded = persons.filter((person) => person.name === newName)\n        const numberIncluded = persons.filter((person) => person.number === newNumber)\n        event.preventDefault()\n        if (nameIncluded.length === 1) {\n            updateNumber(nameIncluded[0])\n        } else if (numberIncluded.length >= 1) {\n            alert(`${numberIncluded[0].name} has already the number ${newNumber}`)\n        } else {\n            addPerson()\n        }\n    }\n\n    return (\n        <>\n            <h2>add a new</h2>\n            <form onSubmit={addName}>\n                <div>\n                    name:\n      <input\n                        value={newName}\n                        onChange={changeName}\n                    />\n                </div>\n                <div>\n                    number:\n      <input\n                        value={newNumber}\n                        onChange={changeNumber}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default Add","import React from 'react'\n\nconst Notification = ({ message, setMessage, error }) => {\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 5\n    }\n    const alertStyle = {\n        color: 'black',\n        fontSize: 12,\n        padding: 10,\n        marginBottom: 5\n    }\n    let showStyle = alertStyle\n    if (error) {\n        showStyle = errorStyle\n    } else {\n        showStyle = alertStyle\n    }\n\n    if (message === null) {\n        return null\n    } else {\n        setTimeout(() => {\n            setMessage(null)\n        }, 2500)\n        return <div style={showStyle}>{message}</div>\n    }\n}\n\nexport default Notification","import axios from 'axios'\n\n// const baseUrl = 'http://localhost:3001/api/persons'\n// const baseUrl = 'https://shrouded-mesa-73090.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(`${baseUrl}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }\n\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Components/Filter'\nimport Rows from './Components/Rows'\nimport Add from './Components/Add'\nimport Notification from './Components/Notification'\nimport entriesService from './services/entries'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setSearchName] = useState('')\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    entriesService\n      .getAll()\n      .then(initialPersons => {\n         return (setPersons(initialPersons))\n      }).catch(error => {\n        setError(true)\n        setMessage(`Loading People from Database failed`)\n      })\n    setError(false)\n    setMessage(`Loading People from Database successful!`)\n  }, [])\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchName(event.target.value)\n  }\n\n  const deleteNumber = (personToDelete) => {\n    if (window.confirm(`Are you shure you want to delete ${personToDelete.name}?`)) {\n      entriesService\n        .deletePerson(personToDelete.id)\n        .then(setPersons(persons.filter(item => item.id !== personToDelete.id)))\n        .catch(error => {\n          setError(true)\n          setMessage(`${error.response.data.error}`)\n        })\n    }\n    setError(false)\n    setMessage(`Deleting ${personToDelete.name} successful!`)\n  }\n\n  const newObject = {\n    name: newName,\n    number: newNumber\n  }\n\n  const updateNumber = (personToUpdate) => {\n    if (window.confirm(`Are you shure you want to change the Number of ${personToUpdate.name} to ${newNumber}?`)) {\n      entriesService\n        .update(personToUpdate.id, newObject)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n          setNewName(\"\")\n          setNewNumber(\"\")\n        }).catch(error => {\n          setError(true)\n          setMessage(`${error.response.data.error}`)\n        })\n    }\n    setError(false)\n    setMessage(`Updating ${personToUpdate.name}'s information successful!`)\n  }\n\n\n  const addPerson = () => {\n    entriesService\n      .create(newObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName(\"\")\n        setNewNumber(\"\")\n      }).catch(error => {\n        setError(true)\n        setMessage(`${error.response.data.error}`)\n      })\n    setError(false)\n    setMessage(`Adding ${newName} was successful!`)\n  }\n\n  if (persons.length !== 0) {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Filter newSearch={newSearch} searchChange={handleSearchChange} />\n        <Add persons={persons} newName={newName} newNumber={newNumber}\n          setPersons={setPersons} setNewName={setNewName} setNewNumber={setNewNumber}\n          changeName={handleNameChange} changeNumber={handleNumberChange}\n          updateNumber={updateNumber} addPerson={addPerson} />\n        <Notification message={message} setMessage={setMessage} error={error} />\n        <h2>Numbers</h2>\n        <Rows persons={persons} newSearch={newSearch}\n          setPersons={setPersons} deleteNumber={deleteNumber} />\n      </div>\n    )\n  }\n  else {\n    return (\n      <div>loading... </div>\n    )\n  }\n}\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}